# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- none

pool:
  vmImage: ubuntu-latest
  
variables:
  acrName: devacr01
  acrLoginServer: devacr01.azurecr.io
  imageName: javaapp
  imageTag: $(Build.BuildId)  # Dynamic tagging for versioning
  resourceGroup: dev-rg
  aksClusterName: devaks01
  deploymentName: my-java-app  # Matches the name in your deployment.yaml

steps:
- task: Maven@4
  inputs:
    azureSubscription: 'Pay-As-You-Go(1)(573a808f-852a-4d92-bd61-b8f21e16aeaf)'
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
    
# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     javaHomeOption: 'JDKVersion'
#     jdkVersionOption: '1.11'
#     jdkArchitectureOption: 'x64'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'package'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/target'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- script: |
    echo "Listing files in target folder:"
    ls -R $(System.DefaultWorkingDirectory)/target
  displayName: 'List target directory contents'

# Step 1: Starting the pipeline
- script: echo "🔧 Starting the Build & Deploy Pipeline"
  displayName: '🏁 Start'

# Step 2: Build Docker image
- task: Bash@3
  displayName: '🐳 Build Docker Image'
  inputs:
    targetType: 'inline'
    script: |
      echo "📁 Current Directory:"
      pwd
      echo "🔨 Building Docker image..."
      docker build -t $(imageName):$(imageTag) .